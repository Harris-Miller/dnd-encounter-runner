apiVersion: apps/v1
kind: Deployment
metadata:
  name: chat-deploy-postgres
  labels:
    app: chat-postgres
spec:
  replicas: 1
  selector:
    matchLabels:
      app: chat-postgres
  template:
    metadata:
      labels:
        app: chat-postgres
    spec:
      containers:
        - name: chat-postgres
          image: postgres:17
          imagePullPolicy: IfNotPresent
          ports:
            - containerPort: 5432
          env:
            - name: POSTGRES_DB
              value: scaled_chat_app
            - name: POSTGRES_PASSWORD
              value: postgres
            - name: POSTGRES_USER
              value: postgres
          volumeMounts:
            - name: data
              mountPath: /var/lib/postgresql/data
          readinessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - -e
              - |
                exec pg_isready -U "postgres" -h 127.0.0.1 -p 5432
                [ -f /opt/bitnami/postgresql/tmp/.initialized ] || [ -f /bitnami/postgresql/.initialized ]
            failureThreshold: 6
            initialDelaySeconds: 5
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
          livenessProbe:
            exec:
              command:
              - /bin/sh
              - -c
              - exec pg_isready -U "postgres" -h 127.0.0.1 -p 5432
            failureThreshold: 6
            initialDelaySeconds: 30
            periodSeconds: 10
            successThreshold: 1
            timeoutSeconds: 5
      volumes:
        - name: data
          persistentVolumeClaim:
            claimName: chat-pvc-postgres

---

apiVersion: v1
kind: Service
metadata:
  name: chat-svc-postgres
  labels:
    app: chat-postgres
spec:
  type: ClusterIP
  selector:
    app: chat-postgres
  ports:
    - name: entry
      port: 5432
      targetPort: 5432
